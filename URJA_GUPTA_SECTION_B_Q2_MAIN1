{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "5339d5d1",
   "metadata": {},
   "outputs": [],
   "source": [
    "# A function to convert a decimal number n to a binary number with bits = length\n",
    "def binary(n,length):\n",
    "    m = n\n",
    "    bin = []\n",
    "    while m > 0:\n",
    "        rem = m%2\n",
    "        bin.append(rem)\n",
    "        m//=2\n",
    "    while len(bin) < length:\n",
    "        bin.append(0)\n",
    "    bin = bin[::-1]\n",
    "    return bin\n",
    "        \n",
    "\n",
    "inp = list(input().split())\n",
    "length = len(inp)\n",
    "# convert each word to lowercase\n",
    "for i in range(length):\n",
    "    inp[i] = inp[i].lower()\n",
    "pow2 = int(pow(2,length))\n",
    "#dictionaries to keep track of the probabilities\n",
    "eprobs = {\"cojelo\":0.1, \"con\":0.2, \"take\":0.3, \"it\": 0.2, \"easy\":0.2}\n",
    "sprobs = {\"cojelo\":0.3, \"con\":0.3, \"take\":0.15, \"it\": 0.15, \"easy\":0.1}\n",
    "#Initialize the score to 0 and the state to an empty list\n",
    "score = 0\n",
    "state = []\n",
    "for i in range(pow2):\n",
    "    #convert to binary with 0 -> E and 1 -> S\n",
    "    bin = binary(i,length)\n",
    "    prob = 1\n",
    "    # calculating the probability that the transition states are binary of i\n",
    "    # with 0 representing English and 1 representing Spanish.\n",
    "    for j in range(length):\n",
    "        if j == 0:\n",
    "            if bin[j] == 0:\n",
    "                prob*=0.6\n",
    "                prob*=eprobs[inp[j]]\n",
    "            else:\n",
    "                prob*=0.4\n",
    "                prob*=sprobs[inp[j]]\n",
    "        else:\n",
    "            if bin[j] == 0 and bin[j-1] == 0:\n",
    "                prob+=0.3*eprobs[inp[j]]\n",
    "            elif bin[j] == 0 and bin[j-1] == 1:\n",
    "                prob+=0.6*eprobs[inp[j]]\n",
    "            elif bin[j] == 1 and bin[j-1] == 0:\n",
    "                prob+=0.7*sprobs[inp[j]]\n",
    "            else:\n",
    "                prob+=0.4*sprobs[inp[j]]\n",
    "    # updating the maximum probability\n",
    "    if score < prob:\n",
    "        score = prob\n",
    "        state = bin\n",
    "# rounding off to 5 decimal places\n",
    "score = (format(score,\".5f\"))\n",
    "#print the transition states\n",
    "for v in state:\n",
    "    if v == 0:\n",
    "        print(\"E\", end=\" \")\n",
    "    else:\n",
    "        print(\"S\", end=\" \")\n",
    "print(\":\",score)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
